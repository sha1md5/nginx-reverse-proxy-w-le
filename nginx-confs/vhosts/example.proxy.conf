upstream {CONTAINER_HOST}_service {
    # {CONTAINER_HOST} is typically container_name or in some cases domainname
    server {CONTAINER_HOST}:{CONTAINER_PORT};
}

server {
    listen 80;
    server_name sub.{DOMAIN.TLD};

    error_log /var/log/nginx/sub.{DOMAIN.TLD}-error.log notice;
    access_log /var/log/nginx/sub.{DOMAIN.TLD}-access.log  main;

# Allow certbot to access to that path for site validation to issue certificate
    location /.well-known/acme-challenge/ {
        allow all;
        root /usr/share/nginx/html/default-site;
    }

# Uncomment if you want serve content at http port
#    location / {
#        proxy_pass http://{CONTAINER_HOST}_service;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }

# Redirect to https, comment if you want server content at http port
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443;
    server_name sub.{DOMAIN.TLD};

    ssl_certificate /etc/letsencrypt/live/{DOMAIN.TLD}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{DOMAIN.TLD}/privkey.pem;

    include snippets/secure.conf;
    include snippets/ssl.conf;

    error_log /var/log/nginx/sub.{DOMAIN.TLD}-error.log notice;
    access_log /var/log/nginx/sub.{DOMAIN.TLD}-access.log  main;

# Allow certbot to access to that path for site validation to issue certificate
    location /.well-known/acme-challenge/ {
        allow all;
        root /usr/share/nginx/html/default-site;
    }

    location / {
        proxy_pass http://{CONTAINER_HOST}_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
